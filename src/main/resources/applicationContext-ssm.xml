<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
	http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">
	<!-- 配置和业务逻辑相关的 -->
	<!-- 包扫描器，扫描带@Service注解的类 -->
	<context:component-scan base-package="com.yx.mydesign"></context:component-scan>

	<!-- 加载mysql数据库和redis缓存驱动 -->
	<context:property-placeholder location="classpath:*.properties"/>
	<!-- <bean id="prop" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<array>
				
			</array>
		</property>
	</bean> -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="maxActive" value="10"></property>
		<property name="minIdle" value="5"></property>
	</bean>
	
	
	<!-- 让spring管理mybatis的sqlsessionfactory对象 使用mybatis和spring整合包中的 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml" />
		<!-- 配置mybatis  mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	<!-- 配置扫描器，将mybatis接口的实现加入到IOC容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有的dao接口 -->
		<property name="basePackage" value="com.yx.mydesign.mapper"/>
	</bean>
	<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
     <property name="maxUploadSize" value="104857600"/>  
       <property name="maxInMemorySize" value="4096"/>  
    </bean>
	
	<!-- 配置一个可以实现批量加载的sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>
	
	
	<!-- 事务控制的配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 开启基于注解的事务   或者使用XML配置形式的事务 -->
	<context:annotation-config />
	<!-- 配置websocket握手 -->
    <!-- <websocket:handlers>
        <websocket:mapping handler="websocket" path="/websocket"/>
        <websocket:handshake-interceptors>
            <bean class="com.yx.mydesign.controller.client.HandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers> -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		<!-- 所有方法都是事务方法 -->
			<tx:method name="*"/>
			<!-- 以get开头的所有方法认为是查询 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 切入点  切入以控制事务 -->
		<aop:pointcut expression="execution(* com.yx.mydesign.service..*(..))" id="txPoint"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
</beans>